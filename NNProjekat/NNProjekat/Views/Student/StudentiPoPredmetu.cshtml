@model StudentSviStudenti
@{
    ViewBag.Title = "Studenti";
}
<br />
<div class="list-group" style="width:90%; margin:0 auto;">
    <div class="list-group-item">
        @Model.Predmet.Naziv
    </div>
</div>
<div class="list-group" style="width:87.5%; margin:0 auto;">
    <div class="form-row">
        <div class="form-group">
            <label>Datum od:</label>
            <input id="datepicker1" placeholder="Datum od" class="form-control" type="text" name="DatumOd" value="" />
        </div>
        <div class="form-group">
            <label>Datum do:</label>
            <input id="datepicker2" placeholder="Datum do" class="form-control" type="text" name="DatumDo" value="" />
        </div>
        <div>
            <div>
                <label>  <br /></label>
            </div>
            <button class="btn btn-link" type="button" id="SumLink">
                <i class="fa fa-check" style="font-size:24px"></i>
            </button>
        </div> 
        <div>
            <div>
                <label>  <br /></label>
            </div>
            <button class="btn btn-link" type="button" id="DelLink">
                <i class="fa fa-remove" style="font-size:24px"></i>
            </button>
        </div>
        <div id="ModDiv" class="form-group">
            <label>Izaberi prikaz:</label>
            <select id="Mod" onclick="PromenaModa()" placeholder="Nastavnik" class="form-control" asp-items="@(new SelectList(Model.Mod.Select(s => new { Text = s.Naziv, Value = s.Vrednost}),"Value","Text"))"></select>
        </div>

    </div>
</div>
<div style="width:90%; margin:0 auto;">
    <table id="predmetTabela" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th><div>JMBG</div></th>
                <th><div>Broj indeksa</div></th>
                <th><div>Ime</div></th>
                <th><div>Prezime</div></th>
                <th><div>Zaključena ocena</div></th>
                <th><div>Datum zaključivanja</div></th>
                <th><div>Prikaz</div></th>
            </tr>
        </thead>
    </table>
</div>
<script>
    var t;
    document.getElementById("SumLink").onclick = function () {
        var datumOd = $("#datepicker1").datepicker({ dateFormat: 'dd,MM,yyyy' }).val();
        var datumDo = $("#datepicker2").datepicker({ dateFormat: 'dd,MM,yyyy' }).val();
        if (datumOd > datumDo) {
            alert("Datum od mora biti datum pre datuma do.");
        }
        if (datumOd == null || datumDo == null || datumOd == "" || datumDo == "") { 
            alert("Datum od mora biti datum pre datuma do.");
            //ako ostavi prazno onda sve
            //ako je jedan prazan onda do i od datuma
        }
        else {
            var mod = $("#Mod").val();
            t.ajax.url("/Student/VratiStudentePoPredmetu/" + '@Html.Raw(Model.SifraPredmeta)' + "/" + datumOd + "/" + datumDo + "/" + mod).load();
        }
    }
     document.getElementById("DelLink").onclick = function () {
            t.ajax.url("/Student/VratiStudentePoPredmetu/" + '@Html.Raw(Model.SifraPredmeta)' + "/" + "undefined" + "/" + "undefined" + "/" + 0).load();
    }
    function PromenaModa() {
        var mod = $("#Mod").val();
        if (mod == "1" || mod == "2") {
            $("#datepicker1").prop('disabled', true);
            $("#datepicker2").prop('disabled', true);
            $("#SumLink").prop('disabled', true);
            $("#DelLink").prop('disabled', true);
        }
        else { 
            $("#datepicker1").prop('disabled', false);
            $("#datepicker2").prop('disabled', false);
            $("#SumLink").prop('disabled', false);
            $("#DelLink").prop('disabled', false);
        }
        t.ajax.url("/Student/VratiStudentePoPredmetu/" + '@Html.Raw(Model.SifraPredmeta)' + "/" + "undefined" + "/" + "undefined" + "/" + mod).load();
    }


    $(document).ready(function () {
        $("#datepicker1").datepicker({ dateFormat: 'dd.mm.yy' });
        $("#datepicker2").datepicker({ dateFormat: 'dd.mm.yy' });

        t = $("#predmetTabela").DataTable({
            "language": {
                "search": "Pretraga",
                "processing": "Obrada",
                "paginate": {
                    "first": "Prvi",
                    "previous": "Prethodni",
                    "next": "Sledeći",
                    "last": "Poslednji"
                },
                "loadingRecords": "Učitavanje podataka",
                "emptyTable": "Tabela je prazna",
                "zeroRecords": "Tabela je prazna",
                "info": "Prikazivanje _START_ do _END_ od _TOTAL_ studenata",
                "lengthMenu": "Prikaži _MENU_  studenata"

            },
            "destroy": true,
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "ajax": {
                "url": "/Student/VratiStudentePoPredmetu/" + '@Html.Raw(Model.SifraPredmeta)' + "/" + "undefined" + "/" + "undefined"+"/"+"0",
                "type": "post",
                "datatype": "json"
            },
            "columnDefs": [{
                "targets": [3, 4],
                "orderable": false
            }],
            "columns": [
                { "data": "Student.JMBG", "name": "JMBG", "autoWidth": true },
                { "data": "Student.BrojIndeksa", "name": "BrojIndeksa", "autoWidth": true },
                { "data": "Student.Ime", "name": "Ime", "autoWidth": true },
                { "data": "Student.Prezime", "name": "Prezime", "autoWidth": true },
                { "data": "ZakljucenaOcena", "name": "Prezime", "autoWidth": true },
                {
                    "data": "DatumZakljucivanja", "name": "Datum", "autoWidth": true,
                    "render": function (data, type, row) {
                        if (data == null) { 
                            return "";
                        }
                        var date = new Date(data);
                        var day = date.getDate();
                        var month = date.getMonth()+1;
                        var year = date.getFullYear();
                        return day + "." + month + "." + year;
                    }
                },
                {

                    "render": function (data, type, full, meta) { return '<a class="btn btn-info fa fa-search-plus" href="/Aktivnost/AktivnostiPoStudentu/'+'@Html.Raw(Model.SifraPredmeta)'+'/' + full.JMBG + '"></a>'; }
                }
            ]

        });
    });


</script>
