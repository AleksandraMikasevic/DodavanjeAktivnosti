@model SlusanjeDodaj
@{
    ViewBag.Title = "Izabir predmeta";
}
<br />
<div class="list-group" style="width:90%; margin:0 auto;">
    <div class="list-group-item">
        @Model.Student.Ime @Model.Student.Prezime
    </div>
</div>
<br />
<div class="list-group" style="width:89%; margin:0 auto;">
    <form>
        <div class="form-row">
            <div class="form-group">
                <select id="predmeti" class="form-control" asp-items="@(new SelectList(Model.Predmeti, "SifraPredmeta","Naziv"))"></select>
            </div>
            <div>
                <button id="DodajPredmet" type="button" class="btn btn-link" name="dodaj">
                    <i class="fa fa-check" style="font-size:24px"></i>
                </button>
            </div>
        </div>
    </form>
</div>
<div style="width:90%; margin:0 auto;">
    <table id="predmetTabela" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th><div>Šifra predmeta</div></th>
                <th><div>Naziv</div></th>
                <th><div>Broj ESPB poena</div></th>
                <th><div></div></th>
                <th><div></div></th>
            </tr>
        </thead>
    </table>
</div>
<script>
    var t;
    $(document).ready(function () {
        if ($('#predmeti').has('option').length == 0) {
            $("#DodajPredmet").prop('disabled', true);
        }
       t = $("#predmetTabela").DataTable({
            "language": {
                "search": "Pretraga",
                "processing": "Obrada",
                "paginate": {
                    "first": "Prvi",
                    "previous": "Prethodni",
                    "next": "Sledeći",
                    "last": "Poslednji"
                },
                "loadingRecords": "Učitavanje podataka",
                "emptyTable": "Tabela je prazna",
                "zeroRecords": "Tabela je prazna",
                "info": "Prikazivanje _START_ do _END_ od _TOTAL_ predmeta",
                "lengthMenu": "Prikaži _MENU_  predmeta"

            },
            "destroy": true,
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "ajax": {
                "url": "/Student/PredmetiStudent/"+@Html.Raw(Json.Serialize(Model.Student.JMBG)),
                "type": "POST",
                "datatype": "json"
            },
            "columnDefs": [{
                "targets": [3],
                "orderable": false
            }],
            "columns": [
                { "data": "Predmet.SifraPredmeta", "name": "SifraPredmeta", "autoWidth": true },
                { "data": "Predmet.Naziv", "name": "Naziv", "autoWidth": true },
                { "data": "Predmet.BrojESPB", "name": "BrojESPB", "autoWidth": true },
                {
                    "render": function (data, type, full, meta) { return '<button id="IzbrisiSlusanje" type="button" id="IzbrisiSlusanje" onclick="IzbrisiPredmet(this)" class="fa fa-remove btn btn-link" ></a>'; }
                },
                {
                    "render": function (data, type, full, meta) {
                        return '<a class="fa fa-info-circle btn btn-link" href="/Student/StudentPredmetAktivnosti/' +@Html.Raw(Json.Serialize(Model.Student.JMBG))+'/'+ full.SifraPredmeta + '"></a>';
                    }
                },
            ]

        });
         $('#DodajPredmet').on('click', function () {
                $.ajax({
                    url: "/Student/DodajSlusanje/" + $("#predmeti").val() + "/" +@Html.Raw(Json.Serialize(Model.Student.JMBG)),
                    type: 'GET',
                    "datatype": "json",
                    success: function () {
                        
                        t.ajax.reload();
                        PromenaPredmeta();
                    },
                    error: function (jqxhr, status, exception) {
                        alert('Exception:', exception.toString());
                    }
             });
        });
        $('#IzbrisiSlusanje').on('click', function () {
                $.ajax({
                    url: "/Student/IzbrisiSlusanje/" + $("#predmeti").val() + "/" +@Html.Raw(Json.Serialize(Model.Student.JMBG)),
                    type: 'GET',
                    "datatype": "json",
                    success: function () {
                        t.ajax.reload();
                        PromenaPredmeta();
                            $("#DodajPredmet").prop('disabled', false);
                    },
                    error: function (jqxhr, status, exception) {
                        alert('Exception:', exception.toString());
                    }
                });
        });

    });
    function IzbrisiPredmet(obj) {
                        $.ajax({
            url: "/Student/IzbrisiSlusanje/" + $(obj).closest('tr').find('td:first').html() + "/" +@Html.Raw(Json.Serialize(Model.Student.JMBG)),
                    type: 'GET',
                    "datatype": "json",
                            success: function () {
                                t.ajax.reload();
                                PromenaPredmeta();
                                    $("#DodajPredmet").prop('disabled', false);
                    },
                    error: function (jqxhr, status, exception) {
                        alert('Exception:', exception.toString());
                    }
                });
    }

    function PromenaPredmeta() {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#predmeti").html(procemessage).show();
        var url = "/Predmet/VratiPreostalePredmete/";
        $.ajax({
            url: "/Student/VratiPreostalePredmete/"+@Html.Raw(Json.Serialize(Model.Student.JMBG)),
            cache: false,
            type: "get",
            success: function (data) {
                
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#predmeti").html(markup).show();
                if (data.length == 0) {
                    $("#DodajPredmet").prop('disabled', true);
                }
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }
</script>
